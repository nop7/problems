#include <iostream>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <complex>
#include <cstdio>
using namespace std;

#define REP(i,p,n) for(int i=p;i<n;++i)
#define rep(i,n) REP(i,0,n)

typedef long long int ll;
typedef pair<int,int> pii;
typedef complex<double> point;

int main()
{
	int x,y,s;
	cin>>x>>y>>s;
	x+=100;
	y+=100;

	int res = 0;

	for(int i=1;i<s;++i)
	for(int j=1;j<s;++j)
	{
		int a = (i*x)/100;
		int b = (j*x)/100;
		if( a+b != s ){ continue; }

		res = max(res,((i*y)/100)+((j*y)/100));
	}

	cout << res << endl;

	return 0;
}#include <iostream>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <complex>
#include <cstdio>
using namespace std;

#define REP(i,p,n) for(int i=p;i<n;++i)
#define rep(i,n) REP(i,0,n)

typedef long long int ll;
typedef pair<int,int> pii;
typedef complex<double> point;

const int MAXH=16;
const int MAXW=5;
int f[MAXH][MAXW];

int main()
{
	int h; cin>>h;
	rep(y,h){ rep(x,5){ cin>>f[y][x]; } }

	int res = 0;

	while(true)
	{
		bool ok = false;

		// 消すフェーズ
		rep(y,h)
		rep(x,5) if(f[y][x])
		{
			int num=0;
			REP(xx,x,5){ if(f[y][x]==f[y][xx]){ ++num; } else { break; } }
			if(num<3){ continue; }

			res += num*f[y][x];
			cout<<(num*f[y][x])<<endl;
			REP(xx,x,5){ if(f[y][x]==f[y][xx]){ f[y][xx]=0; } else { break; } }
			ok = true;
		}

		// 下に落とすフェーズ
		rep(y,h)
		rep(x,5) if(f[h-y-1][x]==0)
		{
			REP(yy,y+1,h){ if(f[h-yy-1][x]!=0){
				f[h-y-1][x]=f[h-yy-1][x];
				break;
			} }
		}

		if(!ok){ break; }
	}


	cout<<res<<endl;



	return 0;
}

#include <iostream>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <complex>
#include <cstdio>
using namespace std;

#define REP(i,p,n) for(int i=p;i<n;++i)
#define rep(i,n) REP(i,0,n)

typedef long long int ll;
typedef pair<int,int> pii;
typedef complex<double> point;

int main()
{
	string s;
	cin>>s;

	const int n = s.size();
	const int m = 1<<s.size();

	vector<string> ans;

	rep(i,m)
	{
		string ss(s);
		rep(j,n){ if((i>>j)&1 && ss[j]!='z'){ ss[j]=ss[j]+1; } }

		REP(j,1,26) rep(k,n)
		{
			if(ss[k]=='a'+j){ ss[k]=((ss[k]-'a'+25)%26)+'a'; break; }
		}

		if(ss==s)
		{
			rep(j,n){ if((i>>j)&1){ ss[j]=((ss[j]-'a'+1)%26)+'a'; } }
			ans.push_back(ss);
		}
	}

	sort(ans.begin(),ans.end());

	rep(i,ans.size()){ cout<<ans[i]<<endl; }

	return 0;
}





